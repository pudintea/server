
NGINX
gcloud compute instance-templates create lb-backend-template \
   --region=us-east1 \
   --network=default \
   --subnet=default \
   --tags=allow-health-check \
   --machine-type=e2-medium \
   --image-family=debian-11 \
   --image-project=debian-cloud \
   --metadata=startup-script='#!/bin/bash
     apt-get update
     apt-get install nginx -y
     vm_hostname="$(curl -H "Metadata-Flavor:Google" \
     http://169.254.169.254/computeMetadata/v1/instance/name)"
     echo "Page served from: $vm_hostname" | \
     tee /var/www/html/index.html
     systemctl restart nginx'

-- Buat group instance
gcloud compute instance-groups managed create lb-backend-group \
   --template=lb-backend-template --size=2 --zone=us-east1-d

-- Firewall
gcloud compute firewall-rules create grant-tcp-rule-476 \
  --network=default \
  --action=allow \
  --direction=ingress \
  --source-ranges=130.211.0.0/22,35.191.0.0/16 \
  --target-tags=allow-health-check \
  --rules=tcp:80


-- Siapkan IP external static global
gcloud compute addresses create lb-ipv4-1 \
  --ip-version=IPV4 \
  --global


-- Catat alamat ip yang dicadangkan
gcloud compute addresses describe lb-ipv4-1 \
  --format="get(address)" \
  --global

Ini nanti yang diaksess : hasilnya 34.160.113.110

-- Buat helty check
gcloud compute health-checks create http http-basic-check \
  --port 80


-- Buat layanan backend
gcloud compute backend-services create web-backend-service \
  --protocol=HTTP \
  --port-name=http \
  --health-checks=http-basic-check \
  --global

-- Tambahkan grup instance sebagai backend ke layanan backend:

gcloud compute backend-services add-backend web-backend-service \
  --instance-group=lb-backend-group \
  --instance-group-zone=us-east1-d \
  --global


-- Buat peta URL untuk mengarahkan permintaan masuk ke layanan backend default:

gcloud compute url-maps create web-map-http \
    --default-service web-backend-service


-- Buat proxy HTTP target untuk mengarahkan permintaan ke peta URL:
gcloud compute target-http-proxies create http-lb-proxy \
    --url-map web-map-http

-- Buat aturan penerusan global untuk mengarahkan permintaan masuk ke proxy:
gcloud compute forwarding-rules create http-content-rule \
   --address=lb-ipv4-1\
   --global \
   --target-http-proxy=http-lb-proxy \
   --ports=80

========================================== PORT 8083 ==========================================


Jadi Port 8083

1. Ubah startup script NGINX
Perbarui startup script untuk mengkonfigurasi NGINX agar mendengarkan pada port 8083. Kamu perlu mengubah konfigurasi NGINX setelah instalasi di skrip startup.

gcloud compute instance-templates create lb-backend-template \
   --region=us-east1 \
   --network=default \
   --subnet=default \
   --tags=allow-health-check \
   --machine-type=e2-medium \
   --image-family=debian-11 \
   --image-project=debian-cloud \
   --metadata=startup-script='#!/bin/bash
     apt-get update
     apt-get install nginx -y
     sed -i "s/listen 80 default_server;/listen 8083 default_server;/" /etc/nginx/sites-available/default
     sed -i "s/listen \[::\]:80 default_server;/listen \[::\]:8083 default_server;/" /etc/nginx/sites-available/default
     vm_hostname="$(curl -H "Metadata-Flavor:Google" \
     http://169.254.169.254/computeMetadata/v1/instance/name)"
     echo "Page served from: $vm_hostname" | \
     tee /var/www/html/index.html
     systemctl restart nginx'

2. Buat grup instance
Tidak ada perubahan yang diperlukan di sini karena template sudah diperbarui.

gcloud compute instance-groups managed create lb-backend-group \
   --template=lb-backend-template --size=2 --zone=us-east1-d

3. Aturan firewall
Tambahkan aturan firewall untuk mengizinkan lalu lintas pada port 8083.

gcloud compute firewall-rules create grant-tcp-rule-476 \
  --network=default \
  --action=allow \
  --direction=ingress \
  --source-ranges=130.211.0.0/22,35.191.0.0/16 \
  --target-tags=allow-health-check \
  --rules=tcp:8083


4. Siapkan IP external static global
Tidak ada perubahan yang diperlukan di sini.

gcloud compute addresses create lb-ipv4-1 \
  --ip-version=IPV4 \
  --global

gcloud compute addresses describe lb-ipv4-1 \
  --format="get(address)" \
  --global

5. Buat pemeriksaan kesehatan
Ubah pemeriksaan kesehatan untuk menggunakan port 8083.

gcloud compute health-checks create http http-basic-check \
  --port 8083

6. Buat layanan backend
Ubah layanan backend untuk menggunakan port 8083.

gcloud compute backend-services create web-backend-service \
  --protocol=HTTP \
  --port-name=http \
  --health-checks=http-basic-check \
  --global

7. Tambahkan grup instance sebagai backend ke layanan backend
Tidak ada perubahan yang diperlukan di sini.

gcloud compute backend-services add-backend web-backend-service \
  --instance-group=lb-backend-group \
  --instance-group-zone=us-east1-d \
  --global

8. Buat peta URL
Tidak ada perubahan yang diperlukan di sini.

gcloud compute url-maps create web-map-http \
    --default-service web-backend-service

9. Buat proxy HTTP target
Tidak ada perubahan yang diperlukan di sini.

gcloud compute target-http-proxies create http-lb-proxy \
    --url-map web-map-http

10. Buat aturan penerusan global
Ubah aturan penerusan untuk menggunakan port 8083.

gcloud compute forwarding-rules create http-content-rule \
   --address=lb-ipv4-1 \
   --global \
   --target-http-proxy=http-lb-proxy \
   --ports=8083


=========================================== BISA DIGUNAKAN =================================================================
-- https://github.com/quiccklabs/Labs_solutions/blob/abfb97e25e85694d40b10bc608c148a295eea078/Implement%20Load%20Balancing%20on%20Compute%20Engine%20Challenge%20Lab/quicklab.md
-- https://www.youtube.com/watch?v=gwZEJw_Ssmw

export INSTANCE_NAME=
export ZONE=
export PORT=
export FIREWALL_NAME=

Isi dengan apa yang tampil saat quiklabs di klik, selanjutnya..

export REGION="${ZONE%-*}"

gcloud compute networks create nucleus-vpc --subnet-mode=auto

gcloud compute instances create $INSTANCE_NAME \
          --network nucleus-vpc \
          --zone $ZONE  \
          --machine-type e2-micro  \
          --image-family debian-10  \
          --image-project debian-cloud 

 
gcloud container clusters create nucleus-backend \
--num-nodes 1 \
--network nucleus-vpc \
--zone $ZONE
 
 
gcloud container clusters get-credentials nucleus-backend \
--zone $ZONE
 
 
kubectl create deployment hello-server \
--image=gcr.io/google-samples/hello-app:2.0
  
kubectl expose deployment hello-server \
--type=LoadBalancer \
--port $PORT
 
  
cat << EOF > startup.sh
#! /bin/bash
apt-get update
apt-get install -y nginx
service nginx start
sed -i -- 's/nginx/Google Cloud Platform - '"\$HOSTNAME"'/' /var/www/html/index.nginx-debian.html
EOF

 
gcloud compute instance-templates create web-server-template \
--metadata-from-file startup-script=startup.sh \
--network nucleus-vpc \
--machine-type g1-small \
--region $ZONE
 
 
gcloud compute target-pools create nginx-pool --region=$REGION
 
 
gcloud compute instance-groups managed create web-server-group \
--base-instance-name web-server \
--size 2 \
--template web-server-template \
--region $REGION
 
 
gcloud compute firewall-rules create $FIREWALL_NAME \
--allow tcp:80 \
--network nucleus-vpc
 
 
gcloud compute http-health-checks create http-basic-check
gcloud compute instance-groups managed \
set-named-ports web-server-group \
--named-ports http:80 \
--region $REGION
 
 
gcloud compute backend-services create web-server-backend \
--protocol HTTP \
--http-health-checks http-basic-check \
--global
 
 
gcloud compute backend-services add-backend web-server-backend \
--instance-group web-server-group \
--instance-group-region $REGION \
--global
 
 
gcloud compute url-maps create web-server-map \
--default-service web-server-backend
 
 
gcloud compute target-http-proxies create http-lb-proxy \
--url-map web-server-map
 
 
 
gcloud compute forwarding-rules create http-content-rule \
--global \
--target-http-proxy http-lb-proxy \
--ports 80
 
 
gcloud compute forwarding-rules create $FIREWALL_NAME \
--global \
--target-http-proxy http-lb-proxy \
--ports 80
gcloud compute forwarding-rules list


== Selesai, tunggu sampai 10 menitan, kalau sduah selesai juga tunggu sampai 10 menitan baru semuanya tercentang hijau.


==========================PUDIN.MY.ID===============================================
