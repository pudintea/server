
================ UPDATE & UPGRADE ==============
> sudo apt update && apt upgrade -y

================ WAKTU ==========================
- mengganti waktu server localtime jakarta
> mv /etc/localtime /etc/localtime-asal && cp /usr/share/zoneinfo/Asia/Jakarta /etc/localtime && timedatectl set-timezone Asia/Jakarta

- mengubah timezone asia-jakarta
> timedatectl set-timezone Asia/Jakarta

ZIP
====
> apt install unzip && apt install zip -y


------------------------------------
NGINX
-------------------------------------
1. Instal Nginx.
# apt-get install nginx -y
# ufw allow 'Nginx Full'
# systemctl enable nginx
# systemctl start nginx
# systemctl status nginx
# cp /etc/nginx/sites-available/default /etc/nginx/sites-available/ASLI-default
- atau
# mv /etc/nginx/sites-available/default /etc/nginx/sites-available/ASLI-default
# nano /etc/nginx/sites-available/default
server {
        listen 80 default_server;
        listen [::]:80 default_server;
        root /var/www/html;
        index index.html index.htm index.nginx-debian.html;
        server_name _;
        location / {
                try_files $uri $uri/ =404;
        }
}

UBAH MENJADI BEGINI

server {
        listen 80 default_server;
        listen [::]:80 default_server;
        root /var/www/html;
        index index.php index.html index.htm index.nginx-debian.html;
        server_name _;
		
		#log files
        access_log  /var/log/nginx/default-nginx_access.log;
        error_log   /var/log/nginx/default-nginx_error.log;
		
        location / {
                try_files $uri $uri/ =404;
        }
        location ~ [^/]\.php(/|$) {
                fastcgi_split_path_info  ^(.+\.php)(/.+)$;
                fastcgi_index            index.php;
                fastcgi_pass unix:/run/php/php7.4-fpm.sock;
                include fastcgi_params;
                fastcgi_param   PATH_INFO  $fastcgi_path_info;
                fastcgi_param   SCRIPT_FILENAME $document_root$fastcgi_script_name;
       }
}

CLOUDFLARE
----------
server {
    listen 80;
    server_name cbt.al-azhar.sch.id;  # Ganti sesuai domainmu

    root /var/www/moodle;  # Ganti sesuai path Moodle kamu
    index index.php index.html index.htm;

    access_log /var/log/nginx/moodle_access.log;
    error_log /var/log/nginx/moodle_error.log;

    # Moodle requires these for clean URLs
    location / {
        try_files $uri $uri/ /index.php?q=$uri&$args;
    }

    location ~ [^/]\.php(/|$) {
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        fastcgi_pass unix:/run/php/php8.4-fpm.sock;  # Sesuaikan dengan PHP versi kamu
        fastcgi_index index.php;
        include fastcgi_params;

        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;

        # Untuk Cloudflare real IP (agar dapat IP asli user)
        real_ip_header CF-Connecting-IP;
        set_real_ip_from 103.21.244.0/22;
        set_real_ip_from 103.22.200.0/22;
        set_real_ip_from 103.31.4.0/22;
        set_real_ip_from 104.16.0.0/12;
        set_real_ip_from 108.162.192.0/18;
        set_real_ip_from 131.0.72.0/22;
        set_real_ip_from 141.101.64.0/18;
        set_real_ip_from 162.158.0.0/15;
        set_real_ip_from 172.64.0.0/13;
        set_real_ip_from 173.245.48.0/20;
        set_real_ip_from 188.114.96.0/20;
        set_real_ip_from 190.93.240.0/20;
        set_real_ip_from 197.234.240.0/22;
        set_real_ip_from 198.41.128.0/17;

        fastcgi_param REMOTE_ADDR $remote_addr;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires max;
        log_not_found off;
    }

    # Deny access to .htaccess and files starting with . (hidden files)
    location ~ /\. {
        deny all;
    }
}

cek konfigurasi
# nginx -t

nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
nginx: configuration file /etc/nginx/nginx.conf test is successful

# service nginx restart

untuk mengecek user apa yang menjalankan nginx, bisa menggunakan kode ini.
Kode Sumber
# ps -eo user,comm | grep nginx


=================
PHP FPM INSTALL
=================
> sudo apt install software-properties-common -y
> sudo add-apt-repository ppa:ondrej/php -y
> sudo apt update
> sudo apt install php8.3-fpm php8.3-mysql php8.3-gd php8.3-mbstring php8.3-curl php8.3-cgi php8.3-xsl php8.3-zip php8.3-opcache php8.3-intl php8.3-bcmath php8.3-imagick php8.3-cli php8.3-xml php8.3-common php8.3-soap -y
> sudo apt install php8.4-fpm php8.4-mysql php8.4-gd php8.4-mbstring php8.4-curl php8.4-cgi php8.4-xsl php8.4-zip php8.4-opcache php8.4-intl php8.4-bcmath php8.4-imagick php8.4-cli php8.4-xml php8.4-common php8.4-soap -y
> sudo systemctl status php8.3-fpm

Untuk PostgreeSQL
> sudo apt install php8.3-pgsql -y

Jika belum running
> sudo systemctl enable php8.3-fpm
> sudo systemctl start php8.3-fpm
> sudo a2dismod php8.3

Aktifkan Modul Proxy dan PHP-FPM
> sudo a2enconf php8.3-fpm

Restart PHP FPM
================
> sudo systemctl restart php8.3-fpm
> sudo systemctl restart php8.4-fpm

Config PHP
============
> nano /etc/php/8.3/fpm/php.ini
Cari dan ubah: (RAM 8GB, 4 Core)
memory_limit = 2048M
max_execution_time = 160
max_input_time = 160
max_input_vars = 5000


==========================================
MARIADB
==========================================

VERSI : MariaDB 10.11.0
Moodle : https://download.moodle.org/releases/latest/

To install MariaDB 10.11 on Debian 13, it is recommended to use the official MariaDB APT repository to ensure you get the specific version and future updates.
1. Update System and Install Prerequisites:

> sudo apt update && sudo apt -y upgrade
> sudo apt install software-properties-common dirmngr apt-transport-https curl -y

2. Add MariaDB APT Repository:
Download and run the MariaDB repository setup script to add the repository and its GPG key to your system.
Specify the desired version (10.11 in this case).
> curl -LsS https://downloads.mariadb.com/MariaDB/mariadb_repo_setup | sudo bash -s -- --mariadb-server-version=10.11

3. Update Package Cache and Install MariaDB:
After adding the repository, update your package list and then install the MariaDB server and client packages.
> sudo apt update
> sudo apt install mariadb-server mariadb-client -y

4. Secure MariaDB Installation:
Run the mariadb-secure-installation script to improve the security of your MariaDB server.
This script will guide you through setting the root password, removing anonymous users, disallowing remote root login, and removing the test database.
> sudo mariadb-secure-installation

5. Verify Installation:
Check the status of the MariaDB service and the installed version to confirm the installation was successful.
> sudo systemctl status mariadb
> mariadb --version

You should see output indicating that the MariaDB service is active and running, and the mariadb --version command should confirm MariaDB 10.11.x is installed.


MOODLE, MARIADB 10.11
======================
> CREATE DATABASE `db_moodle` CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
> CREATE USER 'user_moodle'@'localhost' IDENTIFIED BY 'rahasia';
> GRANT ALL PRIVILEGES ON `db_moodle`.* TO 'user_moodle'@'localhost';

-- 2. Berikan hak akses sesuai kebutuhan Moodle
GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, CREATE TEMPORARY TABLES, DROP, INDEX, ALTER, REFERENCES, LOCK TABLES
ON `db_moodle`.* TO 'user_moodle'@'localhost';

-- BACKUP
mysqldump -u root -p db_moodle > db_moodle-fresh.sql



Langkah-langkah Umum (Linux, contoh Ubuntu)
Perbarui Sistem & Tambahkan Repositori: Buka terminal, perbarui sistem, lalu tambahkan repositori MariaDB dan kunci penandatanganan resminya.
> sudo apt-get update
> sudo apt-get install software-properties-common
> sudo apt-key adv --fetch-keys 'https://mariadb.org/mariadb_release_signing_key.asc'
> sudo add-apt-repository 'deb [arch=amd64,arm64,ppc64el] https://mariadb.mirror.liquidtelecom.com/repo/10.6/ubuntu focal main'

Ganti 10.6 dengan versi terbaru yang Anda inginkan, dan focal dengan rilis Ubuntu Anda.




Pudin Saepudin : italazhar.com
