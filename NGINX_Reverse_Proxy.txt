Akses Ke Banyak Aplikasi Backend Lewat Satu Pintu | REAL CASE !!!

/**
* Pudin S Ilham
* pudin.alazhar@gmail.com
**/

Install NGINX
# sudo apt install nginx

Cek sudah running atau belum
# sudo systemctl status nginx

Pindah ke folder konfigurasi
# cd /etc/nginx/sites-available

Kita hapus konfigurasi default (optional)
# sudo rm -rf default
# sudo rm -rf ../sites-enabled/default

Jangan lupa arahkan domain ke server reverse proxy
Buat file konfigurasi baru di folder tadi untuk domain yang tadi sudah di arahkan
# nano contoh1pudin

buat file konfigurasi seperti di bawah ini :
server{
  listen 80;
  server_name contoh1.pudin.my.id;
  location / {
    proxy_pass http://192.168.20.3:8080;
  }
}

versi lengkap, menyembunyikan informasi server lokal
server{
  listen 80;
  server_name contoh1.pudin.my.id;
  location / {
    proxy_pass http://192.168.20.3:8080;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-proto $scheme;
  }
}

Save dan exit
Control X, Y, Enter.

setelah selesai, buat symbilik link, perhatikan dibawah ini
# sudo ln -s /etc/nginx/sites-available/contoh1pudin /etc/nginx/sites-enabled/

Cek konfigurasi nginx, apakah ada error
# sudo nginx -t

Selanjutnya restart
# sudo systemctl restart nginx


INDEX NGINX
============
                                                  
<!DOCTYPE html>
<html>
<head>
<title>Welcome to nginx!</title>
<style>
    body {
        width: 35em;
        margin: 0 auto;
        font-family: Tahoma, Verdana, Arial, sans-serif;
    }
</style>
</head>
<body>
<h1>Welcome to nginx!</h1>
<p>If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.</p>

<p>For online documentation and support please refer to
<a href="http://nginx.org/">nginx.org</a>.<br/>
Commercial support is available at
<a href="http://nginx.com/">nginx.com</a>.</p>

<p><em>Thank you for using nginx.</em></p>
</body>
</html>


SSL
====
#> sudo ufw allow 'Nginx Full'
#> apt-get install certbot python3-certbot-nginx -y
#> sudo certbot --nginx -d "subdomain.namadomain.com"
atau
#> sudo certbot --nginx -d "example.com" -d "www.example.com"


Sertifikat Let's Encrypt hanya berlaku selama sembilan puluh hari. Hal ini untuk mendorong pengguna mengotomatiskan proses perpanjangan sertifikat mereka. Paket certbotyang kami instal menangani hal ini untuk kami dengan menambahkan pengatur waktu systemd yang akan berjalan dua kali sehari dan secara otomatis memperbarui sertifikat apa pun yang masih dalam waktu tiga puluh hari setelah habis masa berlakunya.

Anda dapat menanyakan status pengatur waktu dengan systemctl:

#> sudo systemctl status certbot.timer
Output
● certbot.timer - Run certbot twice daily
     Loaded: loaded (/lib/systemd/system/certbot.timer; enabled; vendor preset: enabled)
     Active: active (waiting) since Mon 2020-05-04 20:04:36 UTC; 2 weeks 1 days ago
    Trigger: Thu 2020-05-21 05:22:32 UTC; 9h left
   Triggers: ● certbot.service
Untuk menguji proses pembaharuan, Anda dapat melakukan uji coba dengan certbot:

#> sudo certbot renew --dry-run



##==========================================================================================##
